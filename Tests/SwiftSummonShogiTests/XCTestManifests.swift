//
//  XCTestManifests.swift
//  SwiftSummonShogi
//
//  Created by 森田健太 on 9/7/24.
//


#if !canImport(ObjectiveC)
import XCTest

extension BitboardTests {
    // DO NOT MODIFY: This is autogenerated, use:
    //   `swift test --generate-linuxmain`
    // to regenerate.
    static let __allTests__BitboardTests = [
        ("testAttacks", testAttacks),
        ("testAttacksWithStoppers", testAttacksWithStoppers),
        ("testSquares", testSquares),
        ("testSubscript", testSubscript),
    ]
}

extension BoardTests {
    // DO NOT MODIFY: This is autogenerated, use:
    //   `swift test --generate-linuxmain`
    // to regenerate.
    static let __allTests__BoardTests = [
        ("testAttackableSquaresFromSquare", testAttackableSquaresFromSquare),
        ("testAttackableSquaresToSquare", testAttackableSquaresToSquare),
        ("testEmptySquares", testEmptySquares),
        ("testIsAttackable", testIsAttackable),
        ("testIsKingChecked", testIsKingChecked),
        ("testIsKingCheckedByMovingPiece", testIsKingCheckedByMovingPiece),
        ("testIsKingCheckedByMovingPieceFromSquare", testIsKingCheckedByMovingPieceFromSquare),
        ("testOccupiedSquares", testOccupiedSquares),
        ("testSubscript", testSubscript),
    ]
}

extension ColorTests {
    // DO NOT MODIFY: This is autogenerated, use:
    //   `swift test --generate-linuxmain`
    // to regenerate.
    static let __allTests__ColorTests = [
        ("testInitializerWithCharacter", testInitializerWithCharacter),
        ("testToggle", testToggle),
    ]
}

extension DirectionTests {
    // DO NOT MODIFY: This is autogenerated, use:
    //   `swift test --generate-linuxmain`
    // to regenerate.
    static let __allTests__DirectionTests = [
        ("testFlippedHorizontally", testFlippedHorizontally),
        ("testShift", testShift),
    ]
}

extension GameTests {
    // DO NOT MODIFY: This is autogenerated, use:
    //   `swift test --generate-linuxmain`
    // to regenerate.
    static let __allTests__GameTests = [
        ("testInitializerWithSFEN", testInitializerWithSFEN),
        ("testPerformFromBoard", testPerformFromBoard),
        ("testPerformFromCapturedPiece", testPerformFromCapturedPiece),
        ("testPerformWithCapturingPiece", testPerformWithCapturingPiece),
        ("testPerformWithPromotingPiece", testPerformWithPromotingPiece),
        ("testValidateWithBoardPieceDoesNotExistMoveValidationError", testValidateWithBoardPieceDoesNotExistMoveValidationError),
        ("testValidateWithCapturedPieceDoesNotExistMoveValidationError", testValidateWithCapturedPieceDoesNotExistMoveValidationError),
        ("testValidateWithFriendlyPieceAlreadyExistsMoveValidationError", testValidateWithFriendlyPieceAlreadyExistsMoveValidationError),
        ("testValidateWithIllegalAttackMoveValidationError", testValidateWithIllegalAttackMoveValidationError),
        ("testValidateWithIllegalBoardPiecePromotionMoveValidationError", testValidateWithIllegalBoardPiecePromotionMoveValidationError),
        ("testValidateWithIllegalCapturedPiecePromotionMoveValidationError", testValidateWithIllegalCapturedPiecePromotionMoveValidationError),
        ("testValidateWithInvalidPieceColorMoveValidationError", testValidateWithInvalidPieceColorMoveValidationError),
        ("testValidateWithKingPieceIsCheckedMoveValidationError", testValidateWithKingPieceIsCheckedMoveValidationError),
        ("testValidateWithPieceAlreadyPromotedMoveValidationError", testValidateWithPieceAlreadyPromotedMoveValidationError),
        ("testValidateWithPieceCannotPromoteMoveValidationError", testValidateWithPieceCannotPromoteMoveValidationError),
        ("testValidMoves", testValidMoves),
        ("testValidMovesWithMoveSource", testValidMovesWithMoveSource),
    ]
}

extension PieceTests {
    // DO NOT MODIFY: This is autogenerated, use:
    //   `swift test --generate-linuxmain`
    // to regenerate.
    static let __allTests__PieceTests = [
        ("testAttacks", testAttacks),
        ("testCanPromote", testCanPromote),
        ("testCapture", testCapture),
        ("testInitializerWithCharacter", testInitializerWithCharacter),
        ("testIsPromoted", testIsPromoted),
        ("testPromote", testPromote),
        ("testUnpromote", testUnpromote),
    ]
}

extension SFENComponentsTests {
    // DO NOT MODIFY: This is autogenerated, use:
    //   `swift test --generate-linuxmain`
    // to regenerate.
    static let __allTests__SFENComponentsTests = [
        ("testBoard", testBoard),
        ("testCapturedPieces", testCapturedPieces),
        ("testColor", testColor),
    ]
}

extension SFENTests {
    // DO NOT MODIFY: This is autogenerated, use:
    //   `swift test --generate-linuxmain`
    // to regenerate.
    static let __allTests__SFENTests = [
        ("testInitializer", testInitializer),
    ]
}

extension SquareTests {
    // DO NOT MODIFY: This is autogenerated, use:
    //   `swift test --generate-linuxmain`
    // to regenerate.
    static let __allTests__SquareTests = [
        ("testFile", testFile),
        ("testFileCases", testFileCases),
        ("testInitializer", testInitializer),
        ("testPromotableCases", testPromotableCases),
        ("testRank", testRank),
        ("testRankCases", testRankCases),
    ]
}

extension UInt128Tests {
    // DO NOT MODIFY: This is autogenerated, use:
    //   `swift test --generate-linuxmain`
    // to regenerate.
    static let __allTests__UInt128Tests = [
        ("testLeftShift", testLeftShift),
        ("testRightShift", testRightShift),
    ]
}

public func __allTests() -> [XCTestCaseEntry] {
    return [
        testCase(BitboardTests.__allTests__BitboardTests),
        testCase(BoardTests.__allTests__BoardTests),
        testCase(ColorTests.__allTests__ColorTests),
        testCase(DirectionTests.__allTests__DirectionTests),
        testCase(GameTests.__allTests__GameTests),
        testCase(PieceTests.__allTests__PieceTests),
        testCase(SFENComponentsTests.__allTests__SFENComponentsTests),
        testCase(SFENTests.__allTests__SFENTests),
        testCase(SquareTests.__allTests__SquareTests),
        testCase(UInt128Tests.__allTests__UInt128Tests),
    ]
}
#endif
